{"version":3,"sources":["sass/_timer.scss","../node_modules/compass-mixins/lib/compass/css3/_shared.scss","../node_modules/compass-mixins/lib/compass/css3/_box-shadow.scss"],"names":[],"mappings":"AAGA,KACE,yBAGF,MACE,iBAAA,CACA,QAAA,CACA,KAAA,CACA,MAAA,CACA,OAAA,CACA,WAAA,CACA,aAGF,EACE,oBAAA,CACA,cAOF,GACE,kBAAA,CACA,iBAAA,CACA,oBAAA,CACA,yBAEA,UACE,eAAA,CACA,cAIJ,GACE,kBAAA,CACA,iBAAA,CACA,kBAAA,CACA,yBAEA,UACE,gBAKJ,WACE,WAAA,CACA,cAEA,sBACE,UAAA,CACA,iBAAA,CACA,kBAEA,iCACE,eAIJ,wBACE,aAAA,CACA,kBAAA,CACA,sBAAA,CACA,aAAA,CACA,yBAGF,mBACE,iBAAA,CACA,UAAA,CACA,YAAA,CACA,WAAA,CACA,iBAAA,CACA,qBAAA,CACA,iBAAA,CCjEqD,mFC+B7C,CD7BgD,gFC6BhD,CD1BqD,4EDkE7D,8BACE,eAGF,wBACE,iBAAA,CACA,MAAA,CACA,OAAA,CACA,WAAA,CACA,6BAAA,CACA,eAAA,CACA,cAKA,oEACE,UAAA,CACA,iBAAA,CACA,UAAA,CACA,MAAA,CACA,QAAA,CACA,UAAA,CACA,WAAA,CACA,uCAIJ,wBACE,SAAA,CACA,wBAAA,CACA,yBAAA,CACA,iCAAA,CCrGsD,+BDsG3B,CCxGwB,mCDwGxB,CCnGgC,2BDmGhC,CCtG2B,gCDsG3B,CCxGwB,oCDwGxB,CCnGgC,4BDmGhC,CCxGwB,oCDyGhC,CCvGmC,iCDuGnC,CCtGoC,gCDsGpC,CCrGqC,+BDqGrC,CCpGwC,6BDuG7D,2BACE,UAEA,kCACE,UAAA,CACA,iBAAA,CACA,aAAA,CACA,KAAA,CACA,MAAA,CACA,UAAA,CACA,UAAA,CACA,iCAIJ,gCACE,SAAA,CACA,KAAA,CACA,UAAA,CACA,eAAA,CACA,wBAAA,CC9HsD,+BD+H3B,CCjIwB,mCDiIxB,CC5HgC,2BD4HhC,CC/H2B,gCD+H3B,CCjIwB,oCDiIxB,CC5HgC,6BD8H3D,qCACE,iBAAA,CACA,KAAA,CACA,MAAA,CACA,OAAA,CACA,YAIJ,qDAEE,UAAA,CACA,eAAA,CC/ImD,kCDgJtB,CC9IyB,+BD8IzB,CC7I0B,8BD6I1B,CC5I2B,6BD4I3B,CC3I8B,2BD8I7D,6BACE,SAAA,CACA,QAAA,CACA,qBAAA,CACA,8BAAA,CACA,sBAAA,CCxJmD,oDDyJhC,CCvJmC,iDDuJnC,CCtJoC,gDDsJpC,CCrJqC,+CDqJrC,CCpJwC,4CDoJxC,CCvJmC,kCDwJxB,CC1JqB,sCD0JrB,CCrJ6B,8BDqJ7B,CCxJwB,mCDwJxB,CC1JqB,uCD0JrB,CCrJ6B,gCDuJ3D,kCACE,iBAAA,CACA,SAAA,CACA,MAAA,CACA,OAAA,CACA,YAKR,OACE,eAAA,CACA,YAAA,CACA,uBAEF,aACE,kBAEF,cACE,wBAAA,CACA,WAAA,CACA,UAAA,CACA,iBAAA,CACA,iBAAA,CACA,oBAAA,CACA,oBAAA,CACA","file":"src.561f64c4.css","sourceRoot":"../src","sourcesContent":["@import '~compass-mixins/lib/compass/css3';\n\n// Global\nbody {\n  background-color: #f2f1ed;\n}\n\n.wrap {\n  position: absolute;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  right: 0;\n  margin: auto;\n  height: 310px;\n}\n\na {\n  text-decoration: none;\n  color: #1a1a1a;\n}\n\n// Variables\n$lato: 'Lato';\n\n// Title\nh1 {\n  margin-bottom: 60px;\n  text-align: center;\n  font: 300 2.25em $lato;\n  text-transform: uppercase;\n\n  strong {\n    font-weight: 400;\n    color: #ea4c4c;\n  }\n}\n\nh2 {\n  margin-bottom: 80px;\n  text-align: center;\n  font: 300 0.7em $lato;\n  text-transform: uppercase;\n\n  strong {\n    font-weight: 400;\n  }\n}\n\n// Countdown\n.countdown {\n  width: 980px;\n  margin: 0 auto;\n\n  .bloc-time {\n    float: left;\n    margin-right: 45px;\n    text-align: center;\n\n    &:last-child {\n      margin-right: 0;\n    }\n  }\n\n  .count-title {\n    display: block;\n    margin-bottom: 15px;\n    font: normal 0.94em $lato;\n    color: #1a1a1a;\n    text-transform: uppercase;\n  }\n\n  .figure {\n    position: relative;\n    float: left;\n    height: 110px;\n    width: 100px;\n    margin-right: 10px;\n    background-color: #fff;\n    border-radius: 8px;\n    @include box-shadow(\n      0 3px 4px 0 rgba(0, 0, 0, 0.2),\n      inset 2px 4px 0 0 rgba(255, 255, 255, 0.08)\n    );\n\n    &:last-child {\n      margin-right: 0;\n    }\n\n    > span {\n      position: absolute;\n      left: 0;\n      right: 0;\n      margin: auto;\n      font: normal 5.94em/107px $lato;\n      font-weight: 700;\n      color: #de4848;\n    }\n\n    .top,\n    .bottom-back {\n      &:after {\n        content: '';\n        position: absolute;\n        z-index: -1;\n        left: 0;\n        bottom: 0;\n        width: 100%;\n        height: 100%;\n        border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n      }\n    }\n\n    .top {\n      z-index: 3;\n      background-color: #f7f7f7;\n      transform-origin: 50% 100%;\n      -webkit-transform-origin: 50% 100%;\n      @include border-top-radius(10px);\n      @include transform(perspective(200px));\n    }\n\n    .bottom {\n      z-index: 1;\n\n      &:before {\n        content: '';\n        position: absolute;\n        display: block;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 50%;\n        background-color: rgba(0, 0, 0, 0.02);\n      }\n    }\n\n    .bottom-back {\n      z-index: 2;\n      top: 0;\n      height: 50%;\n      overflow: hidden;\n      background-color: #f7f7f7;\n      @include border-top-radius(10px);\n\n      span {\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        margin: auto;\n      }\n    }\n\n    .top,\n    .top-back {\n      height: 50%;\n      overflow: hidden;\n      @include backface-visibility(hidden);\n    }\n\n    .top-back {\n      z-index: 4;\n      bottom: 0;\n      background-color: #fff;\n      -webkit-transform-origin: 50% 0;\n      transform-origin: 50% 0;\n      @include transform(perspective(200px) rotateX(180deg));\n      @include border-bottom-radius(10px);\n\n      span {\n        position: absolute;\n        top: -100%;\n        left: 0;\n        right: 0;\n        margin: auto;\n      }\n    }\n  }\n}\n.timer {\n  margin-top: 40px;\n  display: flex;\n  justify-content: center;\n}\n.choose-date {\n  margin-right: 30px;\n}\n.start-button {\n  background-color: #f0092f;\n  border: none;\n  color: white;\n  padding: 15px 32px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n}\n","@import \"../support\";\n\n// This mixin provides basic support for CSS3 properties and\n// their corresponding experimental CSS2 properties when\n// the implementations are identical except for the property\n// prefix.\n@mixin experimental($property, $value,\n  $moz      : $experimental-support-for-mozilla,\n  $webkit   : $experimental-support-for-webkit,\n  $o        : $experimental-support-for-opera,\n  $ms       : $experimental-support-for-microsoft,\n  $khtml    : $experimental-support-for-khtml,\n  $official : true\n) {\n  @if $webkit  and $experimental-support-for-webkit    { -webkit-#{$property} : $value; }\n  @if $khtml   and $experimental-support-for-khtml     {  -khtml-#{$property} : $value; }\n  @if $moz     and $experimental-support-for-mozilla   {    -moz-#{$property} : $value; }\n  @if $ms      and $experimental-support-for-microsoft {     -ms-#{$property} : $value; }\n  @if $o       and $experimental-support-for-opera     {      -o-#{$property} : $value; }\n  @if $official                                        {         #{$property} : $value; }\n}\n\n// Same as experimental(), but for cases when the property is the same and the value is vendorized\n@mixin experimental-value($property, $value,\n  $moz      : $experimental-support-for-mozilla,\n  $webkit   : $experimental-support-for-webkit,\n  $o        : $experimental-support-for-opera,\n  $ms       : $experimental-support-for-microsoft,\n  $khtml    : $experimental-support-for-khtml,\n  $official : true\n) {\n  @if $webkit  and $experimental-support-for-webkit    { #{$property} : -webkit-#{$value}; }\n  @if $khtml   and $experimental-support-for-khtml     { #{$property} :  -khtml-#{$value}; }\n  @if $moz     and $experimental-support-for-mozilla   { #{$property} :    -moz-#{$value}; }\n  @if $ms      and $experimental-support-for-microsoft { #{$property} :     -ms-#{$value}; }\n  @if $o       and $experimental-support-for-opera     { #{$property} :      -o-#{$value}; }\n  @if $official                                        { #{$property} :         #{$value}; }\n}\n","// @doc off\n// These defaults make the arguments optional for this mixin\n// If you like, set different defaults before importing.\n// @doc on\n\n@import \"shared\";\n\n\n// The default color for box shadows\n$default-box-shadow-color: #333333 !default;\n\n// The default horizontal offset. Positive is to the right.\n$default-box-shadow-h-offset: 0px !default;\n\n// The default vertical offset. Positive is down.\n$default-box-shadow-v-offset: 0px !default;\n\n// The default blur length.\n$default-box-shadow-blur: 5px !default;\n\n// The default spread length.\n$default-box-shadow-spread : false !default;\n\n// The default shadow inset: inset or false (for standard shadow).\n$default-box-shadow-inset : false !default;\n\n// Provides cross-browser for Webkit, Gecko, and CSS3 box shadows when one or more box\n// shadows are needed.\n// Each shadow argument should adhere to the standard css3 syntax for the\n// box-shadow property.\n@mixin box-shadow(\n  $shadow-1 : default,\n  $shadow-2 : false,\n  $shadow-3 : false,\n  $shadow-4 : false,\n  $shadow-5 : false,\n  $shadow-6 : false,\n  $shadow-7 : false,\n  $shadow-8 : false,\n  $shadow-9 : false,\n  $shadow-10: false\n) {\n  @if $shadow-1 == default {\n    $shadow-1 : -compass-space-list(compact(if($default-box-shadow-inset, inset, false), $default-box-shadow-h-offset, $default-box-shadow-v-offset, $default-box-shadow-blur, $default-box-shadow-spread, $default-box-shadow-color));\n  }\n  $shadow : compact($shadow-1, $shadow-2, $shadow-3, $shadow-4, $shadow-5, $shadow-6, $shadow-7, $shadow-8, $shadow-9, $shadow-10);\n  @include experimental(box-shadow, $shadow,\n    -moz, -webkit, not(-o), not(-ms), not(-khtml), official\n  );\n}\n\n// Provides a single cross-browser CSS box shadow for Webkit, Gecko, and CSS3.\n// Includes default arguments for horizontal offset, vertical offset, blur length, spread length, color and inset.\n@mixin single-box-shadow(\n  $hoff   : $default-box-shadow-h-offset,\n  $voff   : $default-box-shadow-v-offset,\n  $blur   : $default-box-shadow-blur,\n  $spread : $default-box-shadow-spread,\n  $color  : $default-box-shadow-color,\n  $inset  : $default-box-shadow-inset\n) {\n  @if not ($inset == true or $inset == false or $inset == inset) {\n    @warn \"$inset expected to be true or the inset keyword. Got #{$inset} instead. Using: inset\";\n  }\n\n  @if $color == none {\n    @include box-shadow(none);\n  } @else {\n    $full   : $hoff $voff;\n    @if $blur   { $full: $full $blur;   }\n    @if $spread { $full: $full $spread; }\n    @if $color  { $full: $full $color;  }\n    @if $inset  { $full: inset $full;   }\n    @include box-shadow($full);\n  }\n}\n"]}